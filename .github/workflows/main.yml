name: main

on: [push]

env:
  MKLROOT: /opt/intel/oneapi/mkl/latest
  OMP_NUM_THREADS: 8

jobs:
  CXX_Debug_fallback_linear_algebra:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
      - name: configure
        run: |
          mkdir build && cd build
          cmake -G Ninja -C ../.github/gnu_compiler_flags.cmake \
          -D CMAKE_BUILD_TYPE=Debug \
          ..
      - name: build
        run: cmake --build build
      - name: test
        run: cmake --build build --target test
  CXX_Release_fallback_linear_algebra:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
      - name: configure
        run: |
          mkdir build && cd build
          cmake -G Ninja -C ../.github/gnu_compiler_flags.cmake \
          -D CMAKE_BUILD_TYPE=Release \
          ..
      - name: build
        run: cmake --build build
      - name: test
        run: cmake --build build --target test
  CXX_Debug_MKL:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
      - name: configure
        run: |
          mkdir build && cd build
          cmake -G Ninja -C ../.github/gnu_compiler_flags.cmake \
          -D CMAKE_BUILD_TYPE=Debug \
          -D FALLBACK_LINALG=OFF \
          -D LINK_LIBRARIES="${MKLROOT}/lib/intel64/libmkl_gnu_thread.so;${MKLROOT}/lib/intel64/libmkl_gf_lp64.so;${MKLROOT}/lib/intel64/libmkl_sequential.so;${MKLROOT}/lib/intel64/libmkl_core.so" \
          ..
      - name: build
        run: cmake --build build
      - name: test
        run: cmake --build build --target test
  CXX_Release_MKL:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
      - name: configure
        run: |
          mkdir build && cd build
          cmake -G Ninja -C ../.github/gnu_compiler_flags.cmake \
          -D CMAKE_BUILD_TYPE=Release \
          -D FALLBACK_LINALG=OFF \
          -D LINK_LIBRARIES="${MKLROOT}/lib/intel64/libmkl_gnu_thread.so;${MKLROOT}/lib/intel64/libmkl_gf_lp64.so;${MKLROOT}/lib/intel64/libmkl_sequential.so;${MKLROOT}/lib/intel64/libmkl_core.so" \
          ..
      - name: build
        run: cmake --build build
      - name: test
        run: cmake --build build --target test
  CXX_Release_Lapack:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
      - name: configure
        run: |
          mkdir build && cd build
          cmake -G Ninja -C ../.github/gnu_compiler_flags.cmake \
          -D CMAKE_BUILD_TYPE=Release \
          -D FALLBACK_LINALG=OFF \
          -D LINK_LIBRARIES="blas;lapack" \
          ..
      - name: build
        run: cmake --build build
      - name: test
        run: cmake --build build --target test
  Fortran_Debug_fallback_linear_algebra:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
      - name: configure
        run: |
          mkdir build && cd build
          cmake -G Ninja -C ../.github/gnu_compiler_flags.cmake \
          -D CMAKE_BUILD_TYPE=Debug \
          -D BUILD_CXX_VERSION=OFF \
          -D OPEN_COARRAYS=/usr/local/opencoarrays/lib/libcaf_mpi.a \
          -D LINK_LIBRARIES=mpi \
          ..
      - name: build
        run: cmake --build build
      - name: test
        run: cmake --build build --target test
  Fortran_Release_fallback_linear_algebra:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
      - name: configure
        run: |
          mkdir build && cd build
          cmake -G Ninja -C ../.github/gnu_compiler_flags.cmake \
          -D CMAKE_BUILD_TYPE=Release \
          -D BUILD_CXX_VERSION=OFF \
          -D OPEN_COARRAYS=/usr/local/opencoarrays/lib/libcaf_mpi.a \
          -D LINK_LIBRARIES=mpi \
          ..
      - name: build
        run: cmake --build build
      - name: test
        run: cmake --build build --target test
  Fortran_Debug_MKL:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
      - name: configure
        run: |
          mkdir build && cd build
          cmake -G Ninja -C ../.github/gnu_compiler_flags.cmake \
          -D CMAKE_BUILD_TYPE=Debug \
          -D BUILD_CXX_VERSION=OFF \
          -D OPEN_COARRAYS=/usr/local/opencoarrays/lib/libcaf_mpi.a \
          -D FALLBACK_LINALG=OFF \
          -D LINK_LIBRARIES="${MKLROOT}/lib/intel64/libmkl_gf_lp64.so;${MKLROOT}/lib/intel64/libmkl_sequential.so;${MKLROOT}/lib/intel64/libmkl_core.so;mpi" \
          ..
      - name: build
        run: cmake --build build
      - name: test
        run: cmake --build build --target test
  Fortran_Release_MKL:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
      - name: configure
        run: |
          mkdir build && cd build
          cmake -G Ninja -C ../.github/gnu_compiler_flags.cmake \
          -D CMAKE_BUILD_TYPE=Release \
          -D BUILD_CXX_VERSION=OFF \
          -D OPEN_COARRAYS=/usr/local/opencoarrays/lib/libcaf_mpi.a \
          -D FALLBACK_LINALG=OFF \
          -D LINK_LIBRARIES="${MKLROOT}/lib/intel64/libmkl_gf_lp64.so;${MKLROOT}/lib/intel64/libmkl_sequential.so;${MKLROOT}/lib/intel64/libmkl_core.so;mpi" \
          ..
      - name: build
        run: cmake --build build
      - name: test
        run: cmake --build build --target test
  Fortran_Release_Lapack:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
      - name: configure
        run: |
          mkdir build && cd build
          cmake -G Ninja -C ../.github/gnu_compiler_flags.cmake \
          -D CMAKE_BUILD_TYPE=Release \
          -D BUILD_CXX_VERSION=OFF \
          -D OPEN_COARRAYS=/usr/local/opencoarrays/lib/libcaf_mpi.a \
          -D LINK_LIBRARIES="blas;lapack;mpi" \
          ..
      - name: build
        run: cmake --build build
      - name: test
        run: cmake --build build --target test
